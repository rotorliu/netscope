// Generated by CoffeeScript 1.12.7
(function() {
  var AppController, Editor, Notify, Renderer,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    slice = [].slice;

  Renderer = require('./renderer.coffee');

  Editor = require('./editor.coffee');

  Notify = require('./notify.coffee');

  module.exports = AppController = (function() {
    function AppController() {
      this.handleWarning = bind(this.handleWarning, this);
      this.handleError = bind(this.handleError, this);
      this.inProgress = false;
      this.$spinner = $('#net-spinner');
      this.$netBox = $('#net-container');
      this.$netError = $('#net-error');
      this.$netWarn = $('#net-warning');
      this.svg = '#net-svg';
      this.setupErrorHandler();
    }

    AppController.prototype.startLoading = function() {
      var args, loader;
      loader = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (this.inProgress) {
        return;
      }
      this.$netError.hide();
      this.$netWarn.hide();
      this.$netBox.hide();
      this.$spinner.show();
      return loader.apply(null, slice.call(args).concat([(function(_this) {
        return function(net) {
          return _this.completeLoading(net);
        };
      })(this)]));
    };

    AppController.prototype.completeLoading = function(net) {
      var renderer;
      this.$spinner.hide();
      $('#net-title').html(net.name.replace(/_/g, ' '));
      this.$netBox.show();
      $(this.svg).empty();
      $('.qtip').remove();
      renderer = new Renderer(net, this.svg);
      return this.inProgress = false;
    };

    AppController.prototype.makeLoader = function(loader) {
      return (function(_this) {
        return function() {
          var args;
          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          return _this.startLoading.apply(_this, [loader].concat(slice.call(args)));
        };
      })(this);
    };

    AppController.prototype.showEditor = function(loader) {
      if (_.isUndefined(window.CodeMirror)) {
        return $.getScript('assets/js/lib/codemirror.min.js', (function(_this) {
          return function() {
            return _this.netEditor = new Editor(_this.makeLoader(loader.load));
          };
        })(this));
      }
    };

    AppController.prototype.setupErrorHandler = function() {
      window.onerror = this.handleError;
      Notify.onerror(this.handleError);
      return Notify.onwarning(this.handleWarning);
    };

    AppController.prototype.handleError = function(message, filename, lineno, colno, e) {
      var msg;
      msg = message;
      if (((e != null ? e.line : void 0) != null) && ((e != null ? e.column : void 0) != null)) {
        msg = "Line " + e.line + ", Column " + e.column + ": " + e.message;
      }
      this.$spinner.hide();
      $('.msg', this.$netError).html(msg);
      this.$netError.show();
      return this.inProgress = false;
    };

    AppController.prototype.handleWarning = function(message) {
      $('.msg', this.$netWarn).html(message);
      return this.$netWarn.show();
    };

    return AppController;

  })();

}).call(this);
